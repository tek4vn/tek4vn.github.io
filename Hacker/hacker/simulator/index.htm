<!DOCTYPE html>
<html lang="de">
<head>
	<meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="canonical" href="index.htm">
	<link rel="stylesheet" type="text/css" href="../hacker.css?x=2020oct">
	<script src="../jquery-jqui.js"></script>
	<title>GeekPrank Hacker Screen - 𝗗𝗲𝗿 𝗕𝗲𝘀𝘁𝗲 𝗛𝗮𝗰𝗸𝗲𝗿 𝗦𝗶𝗺𝘂𝗹𝗮𝘁𝗼𝗿</title>	
    <meta name="description" content="Willkommen zu diesem interaktiven Hacker-Simulator. Klicken Sie auf die Symbole auf der rechten Seite, um die Programme zu öffnen oder drücken Sie die Zahlen auf Ihrer Tastatur.">
    <meta name="keywords" content="Hacker,Typer">
    <meta property="og:title" content="Hacker Typer">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://geekprank.com/hacker/simulator/">
    <meta property="og:image" content="https://geekprank.com/hacker/og.jpg">
    <meta property="og:description" content="Willkommen zu diesem interaktiven Hacker-Simulator. Klicken Sie auf die Symbole auf der rechten Seite, um die Programme zu öffnen oder drücken Sie die Zahlen auf Ihrer Tastatur.">
	<link rel="alternate" hreflang="en" href="../index.htm">
	<link rel="alternate" hreflang="es" href="../simulador/index.htm">
	<link rel="alternate" hreflang="pt" href="../simulador-pt/index.htm">
	<link rel="alternate" hreflang="fr" href="../simulateur/index.htm">
	<link rel="alternate" hreflang="tr" href="../simulatoru/index.htm">
	<link rel="alternate" hreflang="ru" href="../typer/index.htm">
<!-- Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->
<script type="text/javascript" async="true">
(function() {
  var host = window.location.hostname;
  var element = document.createElement('script');
  var firstScript = document.getElementsByTagName('script')[0];
  var url = 'https://quantcast.mgr.consensu.org'
    .concat('/choice/', 'xncav4ssEzwLp', '/', host, '/choice.js')
  var uspTries = 0;
  var uspTriesLimit = 3;
  element.async = true;
  element.type = 'text/javascript';
  element.src = url;

  firstScript.parentNode.insertBefore(element, firstScript);

  function makeStub() {
    var TCF_LOCATOR_NAME = '__tcfapiLocator';
    var queue = [];
    var win = window;
    var cmpFrame;

    function addFrame() {
      var doc = win.document;
      var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);

      if (!otherCMP) {
        if (doc.body) {
          var iframe = doc.createElement('iframe');

          iframe.style.cssText = 'display:none';
          iframe.name = TCF_LOCATOR_NAME;
          doc.body.appendChild(iframe);
        } else {
          setTimeout(addFrame, 5);
        }
      }
      return !otherCMP;
    }

    function tcfAPIHandler() {
      var gdprApplies;
      var args = arguments;

      if (!args.length) {
        return queue;
      } else if (args[0] === 'setGdprApplies') {
        if (
          args.length > 3 &&
          args[2] === 2 &&
          typeof args[3] === 'boolean'
        ) {
          gdprApplies = args[3];
          if (typeof args[2] === 'function') {
            args[2]('set', true);
          }
        }
      } else if (args[0] === 'ping') {
        var retr = {
          gdprApplies: gdprApplies,
          cmpLoaded: false,
          cmpStatus: 'stub'
        };

        if (typeof args[2] === 'function') {
          args[2](retr);
        }
      } else {
        queue.push(args);
      }
    }

    function postMessageEventHandler(event) {
      var msgIsString = typeof event.data === 'string';
      var json = {};

      try {
        if (msgIsString) {
          json = JSON.parse(event.data);
        } else {
          json = event.data;
        }
      } catch (ignore) {}

      var payload = json.__tcfapiCall;

      if (payload) {
        window.__tcfapi(
          payload.command,
          payload.version,
          function(retValue, success) {
            var returnMsg = {
              __tcfapiReturn: {
                returnValue: retValue,
                success: success,
                callId: payload.callId
              }
            };
            if (msgIsString) {
              returnMsg = JSON.stringify(returnMsg);
            }
            event.source.postMessage(returnMsg, '*');
          },
          payload.parameter
        );
      }
    }

    while (win) {
      try {
        if (win.frames[TCF_LOCATOR_NAME]) {
          cmpFrame = win;
          break;
        }
      } catch (ignore) {}

      if (win === window.top) {
        break;
      }
      win = win.parent;
    }
    if (!cmpFrame) {
      addFrame();
      win.__tcfapi = tcfAPIHandler;
      win.addEventListener('message', postMessageEventHandler, false);
    }
  };

  makeStub();

  var uspStubFunction = function() {
    var arg = arguments;
    if (typeof window.__uspapi !== uspStubFunction) {
      setTimeout(function() {
        if (typeof window.__uspapi !== 'undefined') {
          window.__uspapi.apply(window.__uspapi, arg);
        }
      }, 500);
    }
  };

  var checkIfUspIsReady = function() {
    uspTries++;
    if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {
      console.warn('USP is not accessible');
    } else {
      clearInterval(uspInterval);
    }
  };

  if (typeof window.__uspapi === 'undefined') {
    window.__uspapi = uspStubFunction;
    var uspInterval = setInterval(checkIfUspIsReady, 6000);
  }
})();
</script>
<!-- End Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->
<script data-cfasync="false">var freestar = freestar || {};freestar.hitTime = Date.now();freestar.queue = freestar.queue || [];freestar.config = freestar.config || {};freestar.debug = window.location.search.indexOf('fsdebug') === -1 ? false : true;freestar.config.enabled_slots = [];!function(a,b){var c=b.getElementsByTagName("script")[0],d=b.createElement("script"),e="https://a.pub.network/geekprank-com";e+=freestar.debug?"/qa/pubfig.min.js":"/pubfig.min.js",d.async=!0,d.src=e,c.parentNode.insertBefore(d,c)}(window,document);freestar.initCallback = function () { (freestar.config.enabled_slots.length === 0) ? freestar.initCallbackCalled = false : freestar.newAdSlots(freestar.config.enabled_slots) }</script>
</head>
<body>
	<div id="desktop" class="start">
		<div id="typingArea">
			<div id="wrapDesktopTyper">
				<span id="desktopTyper"></span><span class="cursor">_</span>
			</div>
		</div>
		<div class="window closed howToUse" data-ico="?" data-title="Wie wird es verwendet?">
			<div class="scrollbar-rail">
				<p><strong>Willkommen zu diesem interaktiven Hacker-Simulator. Klicken Sie auf die Symbole auf der rechten Seite, um die Programme zu öffnen oder drücken Sie die Zahlen auf Ihrer Tastatur. Ziehen Sie die Fenster mit der Maus, um sie auf Ihrem Desktop zu organisieren.</strong></p>
				<p class="center">
<!-- Place for an ad -->
				</p>
				<h2>Interaktive Programme</h2>
				<p>Die interaktiven Programme können mit den Symbolen auf der rechten Seite des Bildschirms geöffnet werden. Versuchen Sie, mit diesen Programmen zu interagieren, da die meisten von ihnen auf Ihre Handlungen reagieren.</p>
				<p>Minen Sie Bitcoins, beobachten Sie die Überwachungskamera, knacken Sie Passwörter, kontrollieren Sie ein Kernkraftwerk, brechen Sie in die Interpol-Datenbank ein oder finden Sie die besten streng geheimen Deals!</p>
				<h2>Passive Fenster</h2>
				<img src="../geek-hacker-typer.jpg" alt="geek hacker typer">
				<p>Drücken Sie die Zifferntasten auf Ihrer Tastatur (0-9), um die passiven Fenster zu öffnen. Diese Programme zeigen ein statisches oder animiertes Fenster in der Mitte des Bildschirms an. Sie könen sie mit der Maus ziehen. Schließen Sie sie mit der Leertaste.</p>
				<p>Zeigen Sie "Zugriff verweigert" oder "Berechtigung erteilt" Warnungen an, starten Sie einen Selbstzerstörungs-Countdown, spielen Sie eine animierte neuronale Netzwerkverfolgung oder einen Matrix-Code Regen ab. Installieren Sie einen Virus, laden Sie vertrauliche Daten herunter, verfolgen Sie den Standort eines Computers mit Satelliten und vieles mehr!</p>
				<h2>Hacker Typer</h2>
				<p>Minimieren oder schließen Sie alle Fenster und starten Sie das Drücken von zufälligen Tasten auf Ihrer Tastatur, um zu simulieren, dass Sie ein Programm schreiben. Der Hacker Typer fügt mehr als ein Zeichen auf einmal auf dem Bildschirm hinzu, um Ihr Schreiben schneller aussehen zu lassen.</p>
				<p>Öffnen Sie das Programm "Remote Connection", um zu simulieren, dass Sie einen streng geheimen Regierungsserver hacken. Dieser automatisierte Hacker-Typer löst Serverantworten aus und zeigt verschiedene Programme und Warnungen auf dem Bildschirm an.</p>
				<p><strong>Weitere Online-Pranks finden Sie bei GeekPrank!</strong></p>
			</div>
		</div>		
		<div class="window closed mainServer" data-ico="&#9577;" data-title="Hauptserverantwort">
			<div class="scrollbar-rail">
				<div id="serverScreen">
					<div class="serverScreenTop">
						IP-Adresse des Servers: - 23.86.111.0<br>
						Hauptrechner der Regierung. WARNUNG: Streng geheim!
					</div>
				</div>
			</div>
		</div>		
		<div class="window closed bitcoinMiner" data-ico="B" data-title="Bitcoin Miner">		
			<div class="scrollbar-rail">
				<div class="bitcoin">
					<div class="divTable">
						<div class="divTableBody">
							<div class="divTableRow">
								<div class="divTableCell">
									128.154.26.11 Verbunden mit btcn.miner.bitcoin-heap.htmlg.com<br>
									Erlaubnis erteilt! Blockieren: ...7e9Wq#001 Diff:147M<br>
									Initialisiert GPU #0 - #32: [OK] (1.092Ph/s) Started @ <span class="clock"></span><br>
									Übertaktung auf 300 % eingestellt | BW:[ 55/ 13/ 4Mh/kWh]  <br>
									<span class="showWhileMining">Ausführen von BitCrane.exe im unsicheren Modus | STATUS: Miner läuft.....</span>
								</div>
								<div class="divTableCell">
									<div id="btcValletWrap">
										<div id="valletHeader">Wallet</div>
										BTC<span id="btcVallet">8</span>
										<span id="btcIcon"></span>
										<div id="btcEstim">&asymp; $<span id="btcDollar">39664</span></div>
									</div>
								
								</div>
							</div>
							<div class="divTableRow showWhileMining">
								<div class="divTableCell">
									<div class="divTable bordered">
										<div class="divTableBody">
											<div class="divTableHeading">
												<div class="divTableHead">ASICs</div>
												<div class="divTableHead">Akzeptiert</div>
												<div class="divTableHead">Abgelehnt</div>
												<div class="divTableHead">GH/s 5s</div>
											</div>
											<div class="divTableRow">
												<div class="divTableCell">1</div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="100">32442</span></div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="5">354</span></div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="10">353</span>.54 Gh/s</div>
											</div>
											<div class="divTableRow">
												<div class="divTableCell">32</div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="100">56954</span></div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="5">8763</span></div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="2">34</span>.99 Gh/s</div>
											</div>
											<div class="divTableRow">
												<div class="divTableCell">Sum</div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="90">8345345</span></div>
												<div class="divTableCell"><span class="addRemoveRandom" data-rand="10">32122</span></div>
												<div class="divTableCell">~<span class="addRemoveRandom" data-rand="2">153</span> Gh/s</div>
											</div>
										</div>
									</div>
								</div>
								<div class="divTableCell">
									<div id="miningGraph">
									</div>
								</div>
							</div>
							<div class="divTableRow">
								<div class="divTableCell">
									<div id="rollingBitcoinScreenWrap">
										<div id="rollingBitcoinScreen">
											<div class="button" id="startBitcoinMine">Mining starten</div>
										</div>
									</div>
								</div>
								<div class="divTableCell">
									<div class="showWhileMining">
										<div class="blinking" id="miningBlinker">
											Mining.....
										</div>
										<div class="bitcoinAnimation">
											<div class="heap">
											</div>
											<div class="hammer">
											</div>
											<div class="bang">
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="window closed bank" data-ico="&#9712;" data-title="Überwachungskamera">
			<div class="wrapVideo">
				<div class="loading">Verbinden.....<br><img src="../wait.gif" alt="loading"></div>
				<div class="watch"></div>
				<div class="video" data-iframe='CTV9kOEP8Mo'></div>
			</div>
		</div>
		<div class="window closed passwordCracker" data-ico="*|" data-title="Passwort-Knacker">
			<div class="scrollbar-rail">
				<div id="wrapPWCrack">
					<div id="pWCrackHeader">
						<span id="pwButt2">Crack</span><span id="pwButt1">Reset</span><span id="pwButt3">Eindringen</span>
					</div>
					<div id="pWCrackInner">
						<div id="lockAnimation">
						</div>
						<table>
							<tbody>
								<tr>
									<td>Ziel:</td>
									<td><span contenteditable="true" class="inputfield" spellcheck="false" id="targetIp">23.86.111.0</span></td>
								</tr>
								<tr>
									<td>Datenbank:</td>
									<td><span contenteditable="true" class="inputfield" spellcheck="false">Benutzertabelle / Administratorfunktion</span></td>
								</tr>
							</tbody>
						</table>
					</div>
					<div class="divTable" id="pwCrackTable">
						<div class="divTableBody">
							<div class="divTableRow" id="pwGuesserRow">
								<div class="divTableCell" id="pw1">&nbsp;</div>
								<div class="divTableCell" id="pw2"></div>
								<div class="divTableCell" id="pw3"></div>
								<div class="divTableCell" id="pw4"></div>
								<div class="divTableCell" id="pw5"></div>
								<div class="divTableCell" id="pw6"></div>
								<div class="divTableCell" id="pw7"></div>
								<div class="divTableCell" id="pw8"></div>
								<div class="divTableCell" id="pw9"></div>
								<div class="divTableCell" id="pw10"></div>
								<div class="divTableCell" id="pw11"></div>
								<div class="divTableCell" id="pw12"></div>
								<div class="divTableCell" id="pw13"></div>
								<div class="divTableCell" id="pw14"></div>
								<div class="divTableCell" id="pw15"></div>
							</div>
							<div class="divTableRow" id="pwOkRow">
								<div class="divTableCell nowGuessing" id="pwok1">&nbsp;</div>
								<div class="divTableCell" id="pwok2"></div>
								<div class="divTableCell" id="pwok3"></div>
								<div class="divTableCell" id="pwok4"></div>
								<div class="divTableCell" id="pwok5"></div>
								<div class="divTableCell" id="pwok6"></div>
								<div class="divTableCell" id="pwok7"></div>
								<div class="divTableCell" id="pwok8"></div>
								<div class="divTableCell" id="pwok9"></div>
								<div class="divTableCell" id="pwok10"></div>
								<div class="divTableCell" id="pwok11"></div>
								<div class="divTableCell" id="pwok12"></div>
								<div class="divTableCell" id="pwok13"></div>
								<div class="divTableCell" id="pwok14"></div>
								<div class="divTableCell" id="pwok15"></div>
							</div>
							<div class="divTableRow" id="pwCheckedRow">
								<div class="divTableCell" id="pwcheck1">&times;</div>
								<div class="divTableCell" id="pwcheck2">&times;</div>
								<div class="divTableCell" id="pwcheck3">&times;</div>
								<div class="divTableCell" id="pwcheck4">&times;</div>
								<div class="divTableCell" id="pwcheck5">&times;</div>
								<div class="divTableCell" id="pwcheck6">&times;</div>
								<div class="divTableCell" id="pwcheck7">&times;</div>
								<div class="divTableCell" id="pwcheck8">&times;</div>
								<div class="divTableCell" id="pwcheck9">&times;</div>
								<div class="divTableCell" id="pwcheck10">&times;</div>
								<div class="divTableCell" id="pwcheck11">&times;</div>
								<div class="divTableCell" id="pwcheck12">&times;</div>
								<div class="divTableCell" id="pwcheck13">&times;</div>
								<div class="divTableCell" id="pwcheck14">&times;</div>
								<div class="divTableCell" id="pwcheck15">&times;</div>
							</div>
						</div>
					</div>
					<div id="pwdResult">
						<div class="aligncenter">Status: Standby<br><span class="button" onclick="startPwCrack(10)">Brute-Force-Attack starten</span></div>
					</div>
					<div id="pwdLegal">
						<strong>Impressum: Die Verwendung von Password Cracker für schädliche und illegale Aktivitäten ist strengstens verboten und wird mit dem Tod bestraft!</strong>
					</div>
				</div>
			</div>
		</div>		
		<div class="window closed reactor" data-ico="&#8855;" data-title="Kernkraftwerk">
			<div class="scrollbar-rail">
				<div id="wrapNuclearPlant">
					<div id="nuclearFloods">
						<div class="flood"><div data-percent="50" data-step="6"></div></div>
						<div class="flood" id="flood2"><div data-percent="50" data-step="6"></div></div>
						<div class="flood" id="flood3"><div data-percent="50" data-step="36"></div></div>
						<div class="flood" id="flood4"><div data-percent="50" data-step="36"></div></div>
						<div class="flood" id="flood5"><div data-percent="15" data-step="6"></div></div>
						<div class="flood" id="flood6"><div data-percent="75" data-step="46"></div></div>
					</div>
					<div id="nuclearPlant">
						<div class="randomnr" id="nr01" data-step="0.3">14.9</div>
						<div class="randomnr" id="nr02" data-step="0.3">15.0</div>
						<div class="randomnr" id="nr03" data-step="5">630</div>
						<div class="randomnr" id="nr04" data-step="0.3">2020</div>
						<div class="randomnr" id="nr05" data-step="0.3">0</div>
						<div class="randomnr" id="nr06" data-step="100">70000</div>
						<div class="randomnr" id="nr07" data-step="1">0</div>
						<div class="randomnr" id="nr08" data-step="0.2">14.7</div>
						<div class="randomnr yellow" id="nr09" data-step="1">120</div>
						<div class="randomnr yellow" id="nr10" data-step="10">2568</div>
						<div class="randomnr yellow" id="nr11" data-step="0">0</div>
						<div class="randomnr yellow" id="nr12" data-step="10">1493</div>
						<div class="randomnr" id="nr13" data-step="5">120</div>
						<div class="randomnr yellow" id="nr14" data-step="0">0.0</div>
						<div class="randomnr yellow" id="nr15" data-step="5">1500</div>
						<div class="randomnr" id="nr16" data-step="10">2170</div>
						<div class="randomnr" id="nr17" data-step="5">2170</div>
						<div class="randomnr" id="nr18" data-step="1">220</div>
						<div class="randomnr" id="nr19" data-step="0.5">220</div>
						<div class="randomnr" id="nr20" data-step="0">0.0</div>
						<div class="randomnr" id="nr21" data-step="5">924</div>
						<div class="randomnr" id="nr22" data-step="2">603</div>
						<div class="randomnr" id="nr23" data-step="0.5">43</div>
						<div class="randomnr" id="nr24" data-step="5">555</div>
						<div class="randomnr" id="nr25" data-step="5">1951</div>
						<div class="randomnr" id="nr26" data-step="0.5">603</div>
						<div class="randomnr" id="nr27" data-step="5">924</div>
						<div class="randomnr yellow" id="nr28" data-step="5">1493</div>
						<div class="randomnr" id="nr29" data-step="5">288</div>
						<div class="randomnr" id="nr30" data-step="0.5">65</div>
						<div class="randomnr" id="nr31" data-step="0">0</div>
						<div class="randomnr" id="nr32" data-step="2">43</div>
						<div class="randomnr" id="nr33" data-step="7">555</div>
						<div class="randomnr" id="nr34" data-step="20">1925</div>
						<div class="randomnr" id="nr35" data-step="0.5">65.8</div>
						<div class="randomnr" id="nr36" data-step="2">288</div>
						<div class="randomnr yellow" id="nr37" data-step="0.8">1493</div>
					</div>
				</div>
			</div>
		</div>	
		<div class="window closed remoteConnection" data-ico="&#9577;" data-title="Remoteverbindung">
			<div class="scrollbar-rail">
				<span id="remoteText"></span>
				<span class='cursor'></span>
			</div>
		</div>
		<div class="window closed reklamocskak" data-ico="$" data-title="Anzeige">
			<div class="wrapFreestar" id="geekprank_hacker_300x250"><script data-cfasync="false">freestar.config.enabled_slots.push({ placementName: "geekprank_hacker_300x250", slotId: "geekprank_hacker_300x250" });</script></div>
			<div id="wrapBestDeals">
				<a class="fancylink" title="Text Fancy" href="../../index-4.htm" target="_blank" rel="external nofollow">░▀█▀▒██▀░▀▄▀░▀█▀░░▒<br>
░▒█▒░█▄▄░█▒█░▒█▒░░<br>░░▒░░▒░░░▒░▒<br>
░░░█▀▒▄▀▄░█▄░█░▄▀▀░▀▄▀░▒<br>
░▒░█▀░█▀█░█▒▀█░▀▄▄░▒█▒<br>▒▒░░▒<br>
░░░░░░░░░▄▀▀░▄▀▄░█▄▒▄█░▒<br>
▒░▒░▒░░▄░▀▄▄░▀▄▀░█▒▀▒█░▒▒░</a>
			</div>
		</div>

		<div class="window closed interpol" data-ico="&hArr;" data-title="Interpol-Datenbank">
			<div class="wrapVideo">
				<div class="loading">Loading...<br><img src="../wait.gif" alt="loading"></div>
				<div class="video" data-iframe='llufppyponk'>
				</div>
				<div class="wrapReklamocska">
<!-- NeonGreen Responsive TextOnly -->
				</div>
			</div>
		</div>		
		<div class="window closed consoleWindow" data-ico=">." data-title="Programmkonsole">
			<div class="scrollbar-rail">
				<span id="consoleText"></span>
				<span class='cursor'></span>
			</div>
		</div>		
		<div id="accessDenied" class="ablakocska">
			<span>&#128473; Zugriff verweigert </span>
		</div>
		<div id="permissionGranted" class="ablakocska">
			<span>Berechtigung erteilt <img src="../lock-green.gif" alt="unlocked"> </span>
		</div>
		<div id="selfDestruct" class="ablakocska">
			<span>Selbstzerstörung<br><strong id="selfDestructCount">600</strong><br><span>Sequenz aktiviert</span></span>
		</div>
		<div id="topSecret" class="ablakocska">
			<img src="../top-secret.png" alt="classified">
		</div>
		<div id="partikulacskak" class="ablakocska">
			<div>
				<span>Verfolgung neuronaler Netze</span>
				<div id="partikulacskakIde"></div>
			</div>
		</div>		
		<div id="matrixRain" class="ablakocska">
			<div>Code kompilieren</div>
			<canvas id="c"></canvas>
		</div>
		<div id="pcvirus" class="ablakocska">
			<div>
				Installation von Malware<br>
				<img src="../skull.png" alt="skull">
				<div class="processBar"><div></div></div>
			</div>
		</div>
		<div id="grafikon" class="ablakocska">
			<div>
				<canvas id="chart" width="400" height="300"></canvas>
			</div>
		</div>
		<div id="downloadingData" class="ablakocska">
			<div>
				Herunterladen vertraulicher Daten<br>
				<img src="../topsecret.png" alt="highly classified">
				<div class="processBar"><div></div></div>
			</div>
		</div>
		<div id="tracingIP" class="ablakocska">
			<div id="satellite">
				<h3 class="blinking">Satellitenverbindung herstellen</h3>
				<div id="satelliteAnimWrap">
					<div id="satelliteAnim" class="clockwiseTurn">
						<img id="globe" alt="globe" src="../globe.gif">
						<img id="triangle" alt="triangle" src="../triangle.gif">
						<img class="satellite counterClockwiseTurn" id="szat1" alt="satellite" src="../satellite.gif">
						<img class="satellite counterClockwiseTurn" id="szat2" alt="satellite" src="../satellite.gif">
						<img class="satellite counterClockwiseTurn" id="szat3" alt="satellite" src="../satellite.gif">						
					</div>
					<div id="mapWrap">
						<img id="zoomMap" alt="hacker map" src="../map1.jpg">
						<div id="mapPosition" class="blinking"></div>
					</div>
				</div>
			</div>
		</div>		
		<div id="taskbar">		
			<div id="startMenuButton">
				<span>&equiv;</span>&nbsp;Start
			</div>
		</div>
		<div id="startMenu">
			<ul class="languagePicker">
				<li><a class="eng" href="../index.htm">Hacker Typer</a></li>
				<li><a class="rus" href="../typer/index.htm">typer</a></li>
				<li><a class="tur" href="../simulatoru/index.htm">simulatoru</a></li>
				<li><a class="esp" href="../simulador/index.htm">simulador</a></li>
				<li><a class="por" href="../simulador-pt/index.htm">simulador-pt</a></li>
				<li><a class="fra" href="../simulateur/index.htm">simulateur</a></li>
			</ul>
			<h1>Hacker Bildschirm</h1>
			<h2>Online-Hacker-Simulator</h2>
			<p>Beginnen Sie mit der Eingabe von zufälligem Text, um zu simulieren, dass Sie ein Computersystem hacken.</p>
			<p class="center"><a id="automateHacker" class="button">Automatisieren</a> <a id="toggleFullScreen" class="button">Ganzer&nbsp;Bildschirm</a></p>
			<p>Erkunden Sie die Programme, indem Sie auf die Symbole auf der rechten Seite klicken oder die Zahlen auf Ihrer Tastatur drücken, um verschiedene Fenster anzuzeigen.</p>
			<img src="../geek-hacker-typer.jpg" alt="geek hacker typer">
			<p class="center"><a id="howToUseToggle" class="button">Wie wird es verwendet?</a></p>
<div class="wrapFreestar" id="geekprank_hacker_300x100_left"><script data-cfasync="false">freestar.config.enabled_slots.push({ placementName: "geekprank_hacker_300x100_left", slotId: "geekprank_hacker_300x100_left" });</script></div>
			<p>Mit diesem Hacker-Simulationsspiel wollen wir das Bewusstsein für Computer- und Internetsicherheit stärken.</p>
			<p><strong>Weitere Online-Pranks finden Sie unter <a href="../../index.htm">GeekPrank</a></strong></p>
			<div id="prank_dab"><div class="adBanner">.</div></div>
		</div>		
		<div id="icons">
		</div>
	</div>
	<div id="wrapParticles">
		<div id="particles-js">
		</div>
	</div>
	
	<div id="languageBits">
		<span>Sie können das nicht sehen, weil Sie einen Adblocker verwenden.</span>
		<span>AdBlock deaktivieren</span>
		<span>Wie?</span>
		<span>Keine Übereinstimmung</span>
		<span>ERFOLG</span>
		<span>Brute-Force-Attack läuft</span>
		<span>Bitte warten Sie auf die Lösung.</span>
		<span>ERFOLG: Admin-Passwort gefunden</span>
		<span>Passwort</span>
		<span>Status: Standby</span>
		<span>Brute-Force-Attack starten</span>
		<span>Lokalisierung</span>
		<span>IP-Tracking</span>
		<span>Standort gefunden</span>
		<span>Tracking SIM-Karte</span>
		<span>Minimieren</span>
		<span>Maximieren</span>
		<span>Schließen</span>
		<span></span>
	</div>
	<script src="../particles.min.js"></script>
	<script src="../hacker-1.js?x=202009"></script>	
	<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-90658565-1', 'auto');
	  ga('send', 'pageview');
	</script>
</body>
</html>